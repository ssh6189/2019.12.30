######################경사하강법 : 다중회귀분석 실습#################################
import tensorflow as tf 

data = [[2,0, 81],[4,4, 93],[6,2,91],[8,3,97]]
# x 값과 y 값
x1= [ i[0] for i in data]
x2= [ i[1] for i in data]
y_data= [ i[2] for i in data]


#임의의 기울기와 y절편의 값으로 변수로 정의
a1=tf.Variable(tf.random_uniform([1], 0, 10, dtype=tf.float64, seed=0))   #기울기 범위 0~10
a2=tf.Variable(tf.random_uniform([1], 0, 10, dtype=tf.float64, seed=0))   #기울기 범위 0~10
b = tf.Variable(tf.random_uniform([1], 0, 100, dtype=tf.float64, seed=0))   #y절편 범위 0~100

y = a1*x1+a2*x2+b  # 입력값이 2개인 1차방정식의 계산식 정의

#오차 계산 (평균 제곱근 오차 공식)
rmse = tf.sqrt(tf.reduce_mean(tf.square(y-y_data)))

#학습률
learning_rate = 0.1

# 오차 rmse 값이 최소인 값 찾는 식 정의
gradient_descent = tf.train.GradientDescentOptimizer(learning_rate).minimize(rmse)

#텐서플로으로 학습
with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())     # 변수들을 메모리에 생성, 초기화
    for step in range(2001):
        sess.run(gradient_descent)
        if step % 100 == 0:
            print("Epoch: %.f , RMSE=%.4f,  기울기 a1=%.4f, 기울기 a2=%.4f, 절편 b= %.4f" % (step, sess.run(rmse), sess.run(a1), sess.run(a2),sess.run(b)))


